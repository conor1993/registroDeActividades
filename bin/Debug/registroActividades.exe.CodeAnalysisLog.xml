<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\git\registroDeActividades\bin\Debug\registroActividades.exe">
   <Modules>
    <Module Name="registroactividades.exe">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Conexion" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'Conexion' because it creates members of the following IDisposable types: 'SqlConnection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Ejecutar(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\clases" File="Conexion.cs" Line="66">In method 'Conexion.Ejecutar(string)', object 'DS' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'DS' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\clases" File="Conexion.cs" Line="64">In method 'Conexion.Ejecutar(string)', call System.IDisposable.Dispose on object 'CMD' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\clases" File="Conexion.cs" Line="64">The query string passed to 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' in 'Conexion.Ejecutar(string)' could contain the following variables 'Comando'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="registroActividades">
       <Types>
        <Type Name="dtsFormas" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'dtsFormas'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="29">'dtsFormas.dtsFormas()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsFormas..ctor()&#xD;&#xA;DataSet.BeginInit():Void&#xD;&#xA;dtsFormas.InitClass():Void&#xD;&#xA;DataSet.set_DataSetName(String):Void&#xD;&#xA;DataSet.set_Prefix(String):Void&#xD;&#xA;DataSet.set_Namespace(String):Void&#xD;&#xA;DataSet.set_EnforceConstraints(Boolean):Void&#xD;&#xA;DataSet.set_SchemaSerializationMode(SchemaSerializationMode):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="29">Method 'dtsFormas.dtsFormas(SerializationInfo, StreamingContext)' should be modified to call its base class implementation.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="55">In method 'dtsFormas.dtsFormas(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="56">In method 'dtsFormas.dtsFormas(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="70">In method 'dtsFormas.dtsFormas(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSchemaSerializable()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="176">In method 'dtsFormas.GetSchemaSerializable()', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="237">In method 'dtsFormas.GetTypedDataSetSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="228">In method 'dtsFormas.GetTypedDataSetSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadXmlSerializable(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="153">In method 'dtsFormas.ReadXmlSerializable(XmlReader)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dtsFormas+tablaformaDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'dtsFormas.tablaformaDataTable'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="292">'dtsFormas.tablaformaDataTable.tablaformaDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsFormas+tablaformaDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="292">'dtsFormas.tablaformaDataTable.tablaformaDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsFormas+tablaformaDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void&#xD;&#xA;dtsFormas+tablaformaDataTable.InitClass():Vo&#xD;&#xA;DataTable.EndInit():Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="542">In method 'dtsFormas.tablaformaDataTable.GetTypedTableSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="519">In method 'dtsFormas.tablaformaDataTable.GetTypedTableSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dtsFormas+tablaformaRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bd" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_bd()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="632">'dtsFormas.tablaformaRow.bd.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#forma" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_forma()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="648">'dtsFormas.tablaformaRow.forma.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#funcion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_funcion()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="664">'dtsFormas.tablaformaRow.funcion.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#nombre" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_nombre()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="616">'dtsFormas.tablaformaRow.nombre.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#tipo" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_tipo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsFormas.Designer.cs" Line="600">'dtsFormas.tablaformaRow.tipo.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="dtsRegistrosActividad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'dtsRegistrosActividad'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="29">'dtsRegistrosActividad.dtsRegistrosActividad()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsRegistrosActividad..ctor()&#xD;&#xA;DataSet.BeginInit():Void&#xD;&#xA;dtsRegistrosActividad.InitClass():Void&#xD;&#xA;DataSet.set_DataSetName(String):Void&#xD;&#xA;DataSet.set_Prefix(String):Void&#xD;&#xA;DataSet.set_Namespace(String):Void&#xD;&#xA;DataSet.set_EnforceConstraints(Boolean):Void&#xD;&#xA;DataSet.set_SchemaSerializationMode(SchemaSerializationMode):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="29">Method 'dtsRegistrosActividad.dtsRegistrosActividad(SerializationInfo, StreamingContext)' should be modified to call its base class implementation.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="55">In method 'dtsRegistrosActividad.dtsRegistrosActividad(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="56">In method 'dtsRegistrosActividad.dtsRegistrosActividad(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="70">In method 'dtsRegistrosActividad.dtsRegistrosActividad(SerializationInfo, StreamingContext)', call System.IDisposable.Dispose on object 'new StringReader(strSchema)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSchemaSerializable()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="176">In method 'dtsRegistrosActividad.GetSchemaSerializable()', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="237">In method 'dtsRegistrosActividad.GetTypedDataSetSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="228">In method 'dtsRegistrosActividad.GetTypedDataSetSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadXmlSerializable(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="153">In method 'dtsRegistrosActividad.ReadXmlSerializable(XmlReader)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dtsRegistrosActividad+dtbRegistroActDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'dtsRegistrosActividad.dtbRegistroActDataTable'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="294">'dtsRegistrosActividad.dtbRegistroActDataTable.dtbRegistroActDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsRegistrosActividad+dtbRegistroActDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="294">'dtsRegistrosActividad.dtbRegistroActDataTable.dtbRegistroActDataTable()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;dtsRegistrosActividad+dtbRegistroActDataTable..ctor()&#xD;&#xA;DataTable.set_TableName(String):Void&#xD;&#xA;DataTable.BeginInit():Void&#xD;&#xA;dtsRegistrosActividad+dtbRegistroActDataTabl&#xD;&#xA;DataTable.EndInit():Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="556">In method 'dtsRegistrosActividad.dtbRegistroActDataTable.GetTypedTableSchema(XmlSchemaSet)', object 's1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 's1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="533">In method 'dtsRegistrosActividad.dtbRegistroActDataTable.GetTypedTableSchema(XmlSchemaSet)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dtsRegistrosActividad+dtbRegistroActRow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#fin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_fin()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="646">'dtsRegistrosActividad.dtbRegistroActRow.fin.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#forma" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_forma()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="678">'dtsRegistrosActividad.dtbRegistroActRow.forma.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#inicio" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_inicio()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="630">'dtsRegistrosActividad.dtbRegistroActRow.inicio.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#modulo" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_modulo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="694">'dtsRegistrosActividad.dtbRegistroActRow.modulo.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#proyecto" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_proyecto()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="662">'dtsRegistrosActividad.dtbRegistroActRow.proyecto.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#usuario" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_usuario()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\git\registroDeActividades" File="dtsRegistrosActividad.Designer.cs" Line="614">'dtsRegistrosActividad.dtbRegistroActRow.usuario.get()' creates an exception of type 'StrongTypingException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="frmMenu" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#actividadesDiariasToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="62">In method 'frmMenu.actividadesDiariasToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#actividadesToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="68">In method 'frmMenu.actividadesToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#clientesToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="50">In method 'frmMenu.clientesToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#formasToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="44">In method 'frmMenu.formasToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#formasToolStripMenuItem1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="74">In method 'frmMenu.formasToolStripMenuItem1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#moduloToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="38">In method 'frmMenu.moduloToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#proyectoToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="30">In method 'frmMenu.proyectoToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'proyectos' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#registroDeActividadesToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="56">In method 'frmMenu.registroDeActividadesToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sotreToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmMenuPrincipal.cs" Line="80">In method 'frmMenu.sotreToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="registroActividades.formas">
       <Types>
        <Type Name="frmActividades" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnEliminar_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmActividades.cs" Line="229">Object 'connection' can be disposed more than once in method 'frmActividades.btnEliminar_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 229</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnGuardar_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmActividades.cs" Line="72">Object 'connection' can be disposed more than once in method 'frmActividades.btnGuardar_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 72</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmActividadesDiarias" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#crearReporte()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmActividadesDiarias.cs" Line="102">In method 'frmActividadesDiarias.crearReporte()', call System.IDisposable.Dispose on object 'Reporte' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmActividadesDiarias.cs" Line="105">In method 'frmActividadesDiarias.crearReporte()', call System.IDisposable.Dispose on object 'visor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmClientes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#toolStripButton1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmClientes.cs" Line="70">Object 'connection' can be disposed more than once in method 'frmClientes.toolStripButton1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 70</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toolStripButton4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmClientes.cs" Line="225">Object 'connection' can be disposed more than once in method 'frmClientes.toolStripButton4_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 225</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmFormas" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#toolStripButton1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmFormas.cs" Line="150">Object 'connection' can be disposed more than once in method 'frmFormas.toolStripButton1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 150</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toolStripButton4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmFormas.cs" Line="289">Object 'connection' can be disposed more than once in method 'frmFormas.toolStripButton4_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 289</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frminicio" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frminicio.cs" Line="25">In method 'frminicio.button1_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'fr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmModulo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#toolStripButton1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmModulo.cs" Line="150">Object 'connection' can be disposed more than once in method 'frmModulo.toolStripButton1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 150</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toolStripButton4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmModulo.cs" Line="277">Object 'connection' can be disposed more than once in method 'frmModulo.toolStripButton4_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 277</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmProyectos" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#toolStripButton1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmProyectocs.cs" Line="106">Object 'connection' can be disposed more than once in method 'frmProyectos.toolStripButton1_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 106</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#toolStripButton4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmProyectocs.cs" Line="276">Object 'connection' can be disposed more than once in method 'frmProyectos.toolStripButton4_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 276</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmRegistroActivadades" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#guardarObjetos(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmRegistroActivadades.cs" Line="823">Object 'connection' can be disposed more than once in method 'frmRegistroActivadades.guardarObjetos(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 823</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#guardarRegistroActv()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmRegistroActivadades.cs" Line="913">Object 'connection' can be disposed more than once in method 'frmRegistroActivadades.guardarRegistroActv()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 913</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmReporteFormas" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#crearReporte()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmReporteFormas.cs" Line="197">In method 'frmReporteFormas.crearReporte()', call System.IDisposable.Dispose on object 'Reporte' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmReporteFormas.cs" Line="199">In method 'frmReporteFormas.crearReporte()', call System.IDisposable.Dispose on object 'visor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmReporteStore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#crearReporte()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmReporteStore.cs" Line="110">In method 'frmReporteStore.crearReporte()', call System.IDisposable.Dispose on object 'Reporte' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\formas" File="frmReporteStore.cs" Line="112">In method 'frmReporteStore.crearReporte()', call System.IDisposable.Dispose on object 'visor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="registroActividades.reportes">
       <Types>
        <Type Name="CachedReporteDeFormas" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateReport()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\reportes" File="ReporteDeFormas.cs" Line="132">In method 'CachedReporteDeFormas.CreateReport()', object 'rpt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rpt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CachedreporteDeRegistoActividades" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateReport()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\reportes" File="reporteDeRegistoActividades.cs" Line="156">In method 'CachedreporteDeRegistoActividades.CreateReport()', object 'rpt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rpt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CachedreporteStore" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateReport()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-10-03 19:24:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\git\registroDeActividades\reportes" File="reporteStore.cs" Line="132">In method 'CachedreporteStore.CreateReport()', object 'rpt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'rpt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="CallBaseClassMethodsOnISerializableTypes" Category="Microsoft.Usage" CheckId="CA2236">
   <Name>Call base class methods on ISerializable types</Name>
   <Description>Derived ISerializable types must call the base class magic constructor and the base class GetObjectData method.</Description>
   <Resolution Name="Default">Method {0} should be modified to call its base class implementation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182326(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 913</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="NonBreaking">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
